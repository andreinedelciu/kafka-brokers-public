[2020-10-15 14:48:31,612] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	compression.type = producer
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delete.topic.enable = false
	fetch.purgatory.purge.interval.requests = 1000
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 0.10.2-IV0
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,TRACE:TRACE,SASL_SSL:SASL_SSL,PLAINTEXT:PLAINTEXT
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.format.version = 0.10.2-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 1440
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	port = 9092
	principal.builder.class = class org.apache.kafka.common.security.auth.DefaultPrincipalBuilder
	producer.purgatory.purge.interval.requests = 1000
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism.inter.broker.protocol = GSSAPI
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = null
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	unclean.leader.election.enable = true
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-10-15 14:48:31,655] INFO starting (kafka.server.KafkaServer)
[2020-10-15 14:48:31,656] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2020-10-15 14:48:31,871] INFO Cluster ID = hTvjJQn9Rq-707t6FsLa1A (kafka.server.KafkaServer)
[2020-10-15 14:48:31,889] INFO [ThrottledRequestReaper-Fetch], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2020-10-15 14:48:31,890] INFO [ThrottledRequestReaper-Produce], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2020-10-15 14:48:31,938] INFO Loading logs. (kafka.log.LogManager)
[2020-10-15 14:48:31,968] INFO Completed load of log dns_kafka_topic-0 with 1 log segments and log end offset 0 in 16 ms (kafka.log.Log)
[2020-10-15 14:48:31,973] INFO Completed load of log dns_kafka_topic-1 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-15 14:48:31,977] INFO Completed load of log dns_kafka_topic-2 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-15 14:48:31,981] INFO Completed load of log netflow_kafka_topic-0 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-15 14:48:31,984] INFO Completed load of log netflow_kafka_topic-1 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-15 14:48:31,987] INFO Completed load of log netflow_kafka_topic-2 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-15 14:48:31,989] INFO Logs loading complete in 51 ms. (kafka.log.LogManager)
[2020-10-15 14:48:32,040] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2020-10-15 14:48:32,042] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2020-10-15 14:48:32,070] FATAL [Kafka Server 0], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)
kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9092: Address already in use: bind.
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:330)
	at kafka.network.Acceptor.<init>(SocketServer.scala:255)
	at kafka.network.SocketServer$$anonfun$startup$1.apply(SocketServer.scala:98)
	at kafka.network.SocketServer$$anonfun$startup$1.apply(SocketServer.scala:90)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.network.SocketServer.startup(SocketServer.scala:90)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:215)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:67)
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:326)
	... 10 more
[2020-10-15 14:48:32,074] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2020-10-15 14:48:32,076] INFO [Socket Server on Broker 0], Shutting down (kafka.network.SocketServer)
[2020-10-15 14:48:32,078] INFO [Socket Server on Broker 0], Shutdown completed (kafka.network.SocketServer)
[2020-10-15 14:48:32,079] INFO Shutting down. (kafka.log.LogManager)
[2020-10-15 14:48:32,284] INFO Shutdown complete. (kafka.log.LogManager)
[2020-10-15 14:48:32,292] INFO [Kafka Server 0], shut down completed (kafka.server.KafkaServer)
[2020-10-15 14:48:32,293] FATAL Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)
kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9092: Address already in use: bind.
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:330)
	at kafka.network.Acceptor.<init>(SocketServer.scala:255)
	at kafka.network.SocketServer$$anonfun$startup$1.apply(SocketServer.scala:98)
	at kafka.network.SocketServer$$anonfun$startup$1.apply(SocketServer.scala:90)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.network.SocketServer.startup(SocketServer.scala:90)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:215)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:67)
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:326)
	... 10 more
[2020-10-15 14:48:32,298] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2020-10-28 15:54:32,688] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	compression.type = producer
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delete.topic.enable = false
	fetch.purgatory.purge.interval.requests = 1000
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 0.10.2-IV0
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,TRACE:TRACE,SASL_SSL:SASL_SSL,PLAINTEXT:PLAINTEXT
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.format.version = 0.10.2-IV0
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 1440
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	port = 9092
	principal.builder.class = class org.apache.kafka.common.security.auth.DefaultPrincipalBuilder
	producer.purgatory.purge.interval.requests = 1000
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism.inter.broker.protocol = GSSAPI
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = null
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	unclean.leader.election.enable = true
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2020-10-28 15:54:32,736] INFO starting (kafka.server.KafkaServer)
[2020-10-28 15:54:32,738] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2020-10-28 15:54:32,888] INFO Cluster ID = 2b4wuF9ETx63qtDSiW-0hw (kafka.server.KafkaServer)
[2020-10-28 15:54:32,908] INFO [ThrottledRequestReaper-Fetch], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2020-10-28 15:54:32,909] INFO [ThrottledRequestReaper-Produce], Starting  (kafka.server.ClientQuotaManager$ThrottledRequestReaper)
[2020-10-28 15:54:32,947] INFO Loading logs. (kafka.log.LogManager)
[2020-10-28 15:54:32,980] INFO Completed load of log dns_kafka_topic-0 with 1 log segments and log end offset 0 in 16 ms (kafka.log.Log)
[2020-10-28 15:54:32,986] INFO Completed load of log dns_kafka_topic-1 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-28 15:54:32,989] INFO Completed load of log dns_kafka_topic-2 with 1 log segments and log end offset 0 in 1 ms (kafka.log.Log)
[2020-10-28 15:54:32,993] INFO Completed load of log netflow_kafka_topic-0 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-28 15:54:32,997] INFO Completed load of log netflow_kafka_topic-1 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-28 15:54:33,000] INFO Completed load of log netflow_kafka_topic-2 with 1 log segments and log end offset 0 in 1 ms (kafka.log.Log)
[2020-10-28 15:54:33,003] INFO Logs loading complete in 56 ms. (kafka.log.LogManager)
[2020-10-28 15:54:33,046] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2020-10-28 15:54:33,048] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2020-10-28 15:54:33,080] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2020-10-28 15:54:33,083] INFO [Socket Server on Broker 0], Started 1 acceptor threads (kafka.network.SocketServer)
[2020-10-28 15:54:33,098] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-28 15:54:33,098] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-28 15:54:33,129] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2020-10-28 15:54:33,138] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2020-10-28 15:54:33,138] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2020-10-28 15:54:33,266] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2020-10-28 15:54:33,267] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-28 15:54:33,269] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-28 15:54:33,270] INFO [ExpirationReaper-0], Starting  (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2020-10-28 15:54:33,280] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.GroupCoordinator)
[2020-10-28 15:54:33,281] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.GroupCoordinator)
[2020-10-28 15:54:33,281] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 15:54:33,304] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2020-10-28 15:54:33,334] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
[2020-10-28 15:54:33,340] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
[2020-10-28 15:54:33,342] INFO Registered broker 0 at path /brokers/ids/0 with addresses: EndPoint(host.docker.internal,9092,ListenerName(PLAINTEXT),PLAINTEXT) (kafka.utils.ZkUtils)
[2020-10-28 15:54:33,350] INFO [Kafka Server 0], started (kafka.server.KafkaServer)
[2020-10-28 15:54:33,452] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions netflow_kafka_topic-0,dns_kafka_topic-1,dns_kafka_topic-2,dns_kafka_topic-0,netflow_kafka_topic-2,netflow_kafka_topic-1 (kafka.server.ReplicaFetcherManager)
[2020-10-28 15:54:33,485] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions netflow_kafka_topic-0,dns_kafka_topic-1,dns_kafka_topic-2,dns_kafka_topic-0,netflow_kafka_topic-2,netflow_kafka_topic-1 (kafka.server.ReplicaFetcherManager)
[2020-10-28 15:55:25,589] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions metadata_topic-0,metadata_topic-1,metadata_topic-2 (kafka.server.ReplicaFetcherManager)
[2020-10-28 15:55:25,594] INFO Completed load of log metadata_topic-0 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-28 15:55:25,595] INFO Created log for partition [metadata_topic,0] in D:\tmp\kafka-logs with properties {compression.type -> producer, message.format.version -> 0.10.2-IV0, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2020-10-28 15:55:25,597] INFO Partition [metadata_topic,0] on broker 0: No checkpointed highwatermark is found for partition metadata_topic-0 (kafka.cluster.Partition)
[2020-10-28 15:55:25,601] INFO Completed load of log metadata_topic-1 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-28 15:55:25,602] INFO Created log for partition [metadata_topic,1] in D:\tmp\kafka-logs with properties {compression.type -> producer, message.format.version -> 0.10.2-IV0, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2020-10-28 15:55:25,603] INFO Partition [metadata_topic,1] on broker 0: No checkpointed highwatermark is found for partition metadata_topic-1 (kafka.cluster.Partition)
[2020-10-28 15:55:25,606] INFO Completed load of log metadata_topic-2 with 1 log segments and log end offset 0 in 1 ms (kafka.log.Log)
[2020-10-28 15:55:25,607] INFO Created log for partition [metadata_topic,2] in D:\tmp\kafka-logs with properties {compression.type -> producer, message.format.version -> 0.10.2-IV0, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2020-10-28 15:55:25,608] INFO Partition [metadata_topic,2] on broker 0: No checkpointed highwatermark is found for partition metadata_topic-2 (kafka.cluster.Partition)
[2020-10-28 15:55:37,029] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions metadata_warning_topic-1,metadata_warning_topic-2,metadata_warning_topic-0 (kafka.server.ReplicaFetcherManager)
[2020-10-28 15:55:37,033] INFO Completed load of log metadata_warning_topic-1 with 1 log segments and log end offset 0 in 1 ms (kafka.log.Log)
[2020-10-28 15:55:37,035] INFO Created log for partition [metadata_warning_topic,1] in D:\tmp\kafka-logs with properties {compression.type -> producer, message.format.version -> 0.10.2-IV0, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2020-10-28 15:55:37,036] INFO Partition [metadata_warning_topic,1] on broker 0: No checkpointed highwatermark is found for partition metadata_warning_topic-1 (kafka.cluster.Partition)
[2020-10-28 15:55:37,040] INFO Completed load of log metadata_warning_topic-2 with 1 log segments and log end offset 0 in 2 ms (kafka.log.Log)
[2020-10-28 15:55:37,041] INFO Created log for partition [metadata_warning_topic,2] in D:\tmp\kafka-logs with properties {compression.type -> producer, message.format.version -> 0.10.2-IV0, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2020-10-28 15:55:37,042] INFO Partition [metadata_warning_topic,2] on broker 0: No checkpointed highwatermark is found for partition metadata_warning_topic-2 (kafka.cluster.Partition)
[2020-10-28 15:55:37,045] INFO Completed load of log metadata_warning_topic-0 with 1 log segments and log end offset 0 in 1 ms (kafka.log.Log)
[2020-10-28 15:55:37,046] INFO Created log for partition [metadata_warning_topic,0] in D:\tmp\kafka-logs with properties {compression.type -> producer, message.format.version -> 0.10.2-IV0, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> true, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2020-10-28 15:55:37,047] INFO Partition [metadata_warning_topic,0] on broker 0: No checkpointed highwatermark is found for partition metadata_warning_topic-0 (kafka.cluster.Partition)
[2020-10-28 16:04:33,281] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 16:14:33,282] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 16:24:33,282] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 16:34:33,282] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 16:44:33,281] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 16:54:33,281] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 17:04:33,281] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
[2020-10-28 17:14:33,281] INFO [Group Metadata Manager on Broker 0]: Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.GroupMetadataManager)
