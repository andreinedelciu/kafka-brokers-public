[2020-10-28 15:54:14,979] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-10-28 15:54:33,119] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2020-10-28 15:54:33,139] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2020-10-28 15:54:33,141] INFO [Controller 0]: Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2020-10-28 15:54:33,146] INFO [Controller 0]: Controller 0 incremented epoch to 2 (kafka.controller.KafkaController)
[2020-10-28 15:54:33,147] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2020-10-28 15:54:33,188] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-10-28 15:54:33,189] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-10-28 15:54:33,189] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-10-28 15:54:33,192] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-10-28 15:54:33,193] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2020-10-28 15:54:33,193] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2020-10-28 15:54:33,197] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-10-28 15:54:33,197] INFO [Controller 0]: List of topics ineligible for deletion: netflow_kafka_topic,dns_kafka_topic (kafka.controller.KafkaController)
[2020-10-28 15:54:33,199] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-10-28 15:54:33,199] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-10-28 15:54:33,199] INFO [Controller 0]: Current list of topics in the cluster: Set(netflow_kafka_topic, dns_kafka_topic) (kafka.controller.KafkaController)
[2020-10-28 15:54:33,219] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=dns_kafka_topic,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=netflow_kafka_topic,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=dns_kafka_topic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=dns_kafka_topic,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=netflow_kafka_topic,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=netflow_kafka_topic,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2020-10-28 15:54:33,228] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [netflow_kafka_topic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,235] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [dns_kafka_topic,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,240] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [dns_kafka_topic,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,244] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [dns_kafka_topic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,248] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [netflow_kafka_topic,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,253] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [netflow_kafka_topic,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,254] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([netflow_kafka_topic,0] -> OfflinePartition, [dns_kafka_topic,1] -> OfflinePartition, [dns_kafka_topic,2] -> OfflinePartition, [dns_kafka_topic,0] -> OfflinePartition, [netflow_kafka_topic,2] -> OfflinePartition, [netflow_kafka_topic,1] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,256] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-10-28 15:54:33,257] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-10-28 15:54:33,258] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,264] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2020-10-28 15:54:33,264] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2020-10-28 15:54:33,343] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2020-10-28 15:54:33,355] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2020-10-28 15:54:33,355] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-10-28 15:54:33,362] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2020-10-28 15:54:33,363] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-10-28 15:54:33,366] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=netflow_kafka_topic,Partition=2,Replica=0],[Topic=netflow_kafka_topic,Partition=0,Replica=0],[Topic=netflow_kafka_topic,Partition=1,Replica=0],[Topic=dns_kafka_topic,Partition=1,Replica=0],[Topic=dns_kafka_topic,Partition=0,Replica=0],[Topic=dns_kafka_topic,Partition=2,Replica=0] (kafka.controller.ReplicaStateMachine)
[2020-10-28 15:54:33,369] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to host.docker.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-10-28 15:54:33,385] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [netflow_kafka_topic,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,385] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [netflow_kafka_topic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,395] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([netflow_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [dns_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [dns_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,398] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [dns_kafka_topic,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,398] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [dns_kafka_topic,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,401] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([netflow_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [dns_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,403] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [dns_kafka_topic,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,403] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [dns_kafka_topic,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,406] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([netflow_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,408] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [dns_kafka_topic,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,408] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [dns_kafka_topic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,411] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([netflow_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [netflow_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1), [netflow_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,413] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [netflow_kafka_topic,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,413] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [netflow_kafka_topic,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,415] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([netflow_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [netflow_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [netflow_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:33,418] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [netflow_kafka_topic,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,418] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [netflow_kafka_topic,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2020-10-28 15:54:33,420] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([netflow_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [dns_kafka_topic,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [netflow_kafka_topic,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [netflow_kafka_topic,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2)) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:54:38,268] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 15:54:38,270] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [dns_kafka_topic,2] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 15:54:38,272] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 15:54:38,273] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 15:55:25,558] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children metadata_topic,netflow_kafka_topic,dns_kafka_topic (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2020-10-28 15:55:25,561] INFO [TopicChangeListener on Controller 0]: New topics: [Set(metadata_topic)], deleted topics: [Set()], new partition replica assignment [Map([metadata_topic,2] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2020-10-28 15:55:25,561] INFO [Controller 0]: New topic creation callback for [metadata_topic,2],[metadata_topic,1],[metadata_topic,0] (kafka.controller.KafkaController)
[2020-10-28 15:55:25,563] INFO [Controller 0]: New partition creation callback for [metadata_topic,2],[metadata_topic,1],[metadata_topic,0] (kafka.controller.KafkaController)
[2020-10-28 15:55:25,563] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [metadata_topic,2],[metadata_topic,1],[metadata_topic,0] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,565] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=metadata_topic,Partition=2,Replica=0],[Topic=metadata_topic,Partition=1,Replica=0],[Topic=metadata_topic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2020-10-28 15:55:25,567] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [metadata_topic,2],[metadata_topic,1],[metadata_topic,0] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,568] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [metadata_topic,2] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,568] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [metadata_topic,2] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,577] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [metadata_topic,1] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,577] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [metadata_topic,1] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,582] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [metadata_topic,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,582] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [metadata_topic,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:25,587] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=metadata_topic,Partition=2,Replica=0],[Topic=metadata_topic,Partition=1,Replica=0],[Topic=metadata_topic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2020-10-28 15:55:37,002] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children metadata_topic,metadata_warning_topic,netflow_kafka_topic,dns_kafka_topic (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2020-10-28 15:55:37,004] INFO [TopicChangeListener on Controller 0]: New topics: [Set(metadata_warning_topic)], deleted topics: [Set()], new partition replica assignment [Map([metadata_warning_topic,0] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_warning_topic,2] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2020-10-28 15:55:37,004] INFO [Controller 0]: New topic creation callback for [metadata_warning_topic,0],[metadata_warning_topic,1],[metadata_warning_topic,2] (kafka.controller.KafkaController)
[2020-10-28 15:55:37,005] INFO [Controller 0]: New partition creation callback for [metadata_warning_topic,0],[metadata_warning_topic,1],[metadata_warning_topic,2] (kafka.controller.KafkaController)
[2020-10-28 15:55:37,006] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [metadata_warning_topic,0],[metadata_warning_topic,1],[metadata_warning_topic,2] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,006] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=metadata_warning_topic,Partition=0,Replica=0],[Topic=metadata_warning_topic,Partition=1,Replica=0],[Topic=metadata_warning_topic,Partition=2,Replica=0] (kafka.controller.ReplicaStateMachine)
[2020-10-28 15:55:37,008] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [metadata_warning_topic,0],[metadata_warning_topic,1],[metadata_warning_topic,2] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,008] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [metadata_warning_topic,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,009] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [metadata_warning_topic,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,016] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [metadata_warning_topic,1] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,016] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [metadata_warning_topic,1] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,021] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [metadata_warning_topic,2] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,021] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [metadata_warning_topic,2] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2020-10-28 15:55:37,027] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=metadata_warning_topic,Partition=0,Replica=0],[Topic=metadata_warning_topic,Partition=1,Replica=0],[Topic=metadata_warning_topic,Partition=2,Replica=0] (kafka.controller.ReplicaStateMachine)
[2020-10-28 15:59:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 15:59:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 15:59:38,266] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 15:59:38,266] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:04:38,266] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:04:38,268] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:04:38,268] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:04:38,269] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:09:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:09:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:09:38,266] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:09:38,266] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:14:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:14:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:14:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:14:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:19:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:19:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:19:38,264] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:19:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:24:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:24:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:24:38,264] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:24:38,264] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:29:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:29:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:29:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:29:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:34:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:34:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:34:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:34:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:39:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:39:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:39:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:39:38,266] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:44:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:44:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:44:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:44:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:49:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:49:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:49:38,264] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:49:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:54:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:54:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:54:38,264] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:54:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 16:59:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 16:59:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 16:59:38,264] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 16:59:38,264] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 17:04:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 17:04:38,268] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 17:04:38,269] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 17:04:38,269] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 17:09:38,265] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 17:09:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 17:09:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 17:09:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2020-10-28 17:14:38,266] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2020-10-28 17:14:38,266] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([netflow_kafka_topic,0] -> List(0), [dns_kafka_topic,1] -> List(0), [metadata_topic,2] -> List(0), [dns_kafka_topic,2] -> List(0), [metadata_warning_topic,0] -> List(0), [dns_kafka_topic,0] -> List(0), [netflow_kafka_topic,2] -> List(0), [netflow_kafka_topic,1] -> List(0), [metadata_warning_topic,1] -> List(0), [metadata_topic,1] -> List(0), [metadata_topic,0] -> List(0), [metadata_warning_topic,2] -> List(0))) (kafka.controller.KafkaController)
[2020-10-28 17:14:38,266] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2020-10-28 17:14:38,267] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
