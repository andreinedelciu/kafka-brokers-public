[2021-04-28 16:41:33,624] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition metadata_topic-0 (state.change.logger)
[2021-04-28 16:41:33,625] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition netflow_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,625] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-49 (state.change.logger)
[2021-04-28 16:41:33,627] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-38 (state.change.logger)
[2021-04-28 16:41:33,627] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition http_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:33,627] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-16 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-27 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition smtp_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-19 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-8 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition tls_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1001,LeaderEpoch:54,ControllerEpoch:57) to brokers Set() for partition topic_test-0 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-2 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-13 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-35 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-46 (state.change.logger)
[2021-04-28 16:41:33,628] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-24 (state.change.logger)
[2021-04-28 16:41:33,629] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-5 (state.change.logger)
[2021-04-28 16:41:33,629] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-43 (state.change.logger)
[2021-04-28 16:41:33,629] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-32 (state.change.logger)
[2021-04-28 16:41:33,629] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-21 (state.change.logger)
[2021-04-28 16:41:33,629] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set() for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:33,629] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-10 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-37 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition http_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-48 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition netflow_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition metadata_topic-2 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition tls_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:33,630] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-18 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-40 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-29 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-7 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition fileinfo_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-45 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-34 (state.change.logger)
[2021-04-28 16:41:33,631] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-23 (state.change.logger)
[2021-04-28 16:41:33,632] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition smtp_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,632] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition http_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:33,632] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-26 (state.change.logger)
[2021-04-28 16:41:33,632] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-15 (state.change.logger)
[2021-04-28 16:41:33,632] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-4 (state.change.logger)
[2021-04-28 16:41:33,633] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-42 (state.change.logger)
[2021-04-28 16:41:33,633] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set() for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,633] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-9 (state.change.logger)
[2021-04-28 16:41:33,633] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-20 (state.change.logger)
[2021-04-28 16:41:33,633] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-31 (state.change.logger)
[2021-04-28 16:41:33,633] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-1 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition fileinfo_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-12 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition metadata_topic-1 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition smtp_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition tls_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-17 (state.change.logger)
[2021-04-28 16:41:33,634] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-28 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-6 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-39 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition netflow_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-44 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-36 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-47 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-25 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-14 (state.change.logger)
[2021-04-28 16:41:33,635] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-3 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-30 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-41 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition meta_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-33 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-22 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-11 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition fileinfo_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set() for partition __consumer_offsets-0 (state.change.logger)
[2021-04-28 16:41:33,636] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set() for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:33,654] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,19] (state.change.logger)
[2021-04-28 16:41:33,664] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,19] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,667] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,673] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,675] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,30] (state.change.logger)
[2021-04-28 16:41:33,681] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,30] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,681] TRACE Controller 1 epoch 58 started leader election for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:33,686] ERROR Controller 1 epoch 58 initiated state change for partition [dns_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [dns_kafka_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 1010, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,687] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,47] (state.change.logger)
[2021-04-28 16:41:33,693] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,47] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,694] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,700] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,701] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,29] (state.change.logger)
[2021-04-28 16:41:33,706] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,29] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,706] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,41] (state.change.logger)
[2021-04-28 16:41:33,711] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,41] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,711] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,2] (state.change.logger)
[2021-04-28 16:41:33,716] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,717] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,39] (state.change.logger)
[2021-04-28 16:41:33,724] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,39] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,724] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,10] (state.change.logger)
[2021-04-28 16:41:33,730] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,10] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,730] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,17] (state.change.logger)
[2021-04-28 16:41:33,738] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,17] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,738] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,14] (state.change.logger)
[2021-04-28 16:41:33,744] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,14] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,744] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,40] (state.change.logger)
[2021-04-28 16:41:33,749] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,40] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,750] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:33,754] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,754] TRACE Controller 1 epoch 58 started leader election for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:33,759] ERROR Controller 1 epoch 58 initiated state change for partition [dns_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [dns_kafka_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 1010)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,759] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,18] (state.change.logger)
[2021-04-28 16:41:33,763] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,18] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,764] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:33,768] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,768] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,0] (state.change.logger)
[2021-04-28 16:41:33,772] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,772] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,26] (state.change.logger)
[2021-04-28 16:41:33,777] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,26] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,778] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,24] (state.change.logger)
[2021-04-28 16:41:33,783] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,24] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,783] TRACE Controller 1 epoch 58 started leader election for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,788] ERROR Controller 1 epoch 58 initiated state change for partition [dns_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [dns_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1010, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,788] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:33,792] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,793] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,33] (state.change.logger)
[2021-04-28 16:41:33,797] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,33] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,798] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:33,803] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,804] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,20] (state.change.logger)
[2021-04-28 16:41:33,809] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,20] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,810] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,3] (state.change.logger)
[2021-04-28 16:41:33,815] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,3] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,816] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,21] (state.change.logger)
[2021-04-28 16:41:33,821] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,21] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,821] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,22] (state.change.logger)
[2021-04-28 16:41:33,826] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,22] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,827] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,5] (state.change.logger)
[2021-04-28 16:41:33,831] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,5] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,831] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,12] (state.change.logger)
[2021-04-28 16:41:33,835] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,12] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,836] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,840] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,840] TRACE Controller 1 epoch 58 started leader election for partition [topic_test,0] (state.change.logger)
[2021-04-28 16:41:33,844] ERROR Controller 1 epoch 58 initiated state change for partition [topic_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [topic_test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1001)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,844] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,8] (state.change.logger)
[2021-04-28 16:41:33,849] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,8] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,849] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,23] (state.change.logger)
[2021-04-28 16:41:33,853] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,23] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,853] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,15] (state.change.logger)
[2021-04-28 16:41:33,857] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,15] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,857] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,11] (state.change.logger)
[2021-04-28 16:41:33,861] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,11] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,862] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,48] (state.change.logger)
[2021-04-28 16:41:33,866] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,48] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,866] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:33,870] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,870] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:33,874] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,874] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,13] (state.change.logger)
[2021-04-28 16:41:33,878] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,13] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,878] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,49] (state.change.logger)
[2021-04-28 16:41:33,883] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,49] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,883] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,6] (state.change.logger)
[2021-04-28 16:41:33,887] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,6] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,887] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,28] (state.change.logger)
[2021-04-28 16:41:33,891] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,28] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,892] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,4] (state.change.logger)
[2021-04-28 16:41:33,895] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,4] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,896] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:33,900] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,900] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,37] (state.change.logger)
[2021-04-28 16:41:33,905] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,37] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,905] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,909] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,910] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,31] (state.change.logger)
[2021-04-28 16:41:33,914] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,31] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,914] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,44] (state.change.logger)
[2021-04-28 16:41:33,918] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,44] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,918] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,1] (state.change.logger)
[2021-04-28 16:41:33,922] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,922] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,42] (state.change.logger)
[2021-04-28 16:41:33,926] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,42] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,926] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,34] (state.change.logger)
[2021-04-28 16:41:33,931] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,34] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,931] TRACE Controller 1 epoch 58 started leader election for partition [meta_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,935] ERROR Controller 1 epoch 58 initiated state change for partition [meta_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [meta_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,935] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,46] (state.change.logger)
[2021-04-28 16:41:33,939] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,46] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,939] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,0] (state.change.logger)
[2021-04-28 16:41:33,942] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,943] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:33,946] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,946] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,25] (state.change.logger)
[2021-04-28 16:41:33,950] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,25] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,950] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:33,954] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,954] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,45] (state.change.logger)
[2021-04-28 16:41:33,957] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,45] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,958] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,27] (state.change.logger)
[2021-04-28 16:41:33,963] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,27] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,963] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,32] (state.change.logger)
[2021-04-28 16:41:33,968] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,32] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,969] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,43] (state.change.logger)
[2021-04-28 16:41:33,974] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,43] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,974] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:33,979] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,979] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,36] (state.change.logger)
[2021-04-28 16:41:33,983] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,36] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,983] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:33,987] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,987] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,35] (state.change.logger)
[2021-04-28 16:41:33,992] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,35] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,993] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,7] (state.change.logger)
[2021-04-28 16:41:33,996] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,7] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:33,996] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,9] (state.change.logger)
[2021-04-28 16:41:34,000] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,9] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:34,000] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,38] (state.change.logger)
[2021-04-28 16:41:34,005] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,38] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:34,005] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,1] (state.change.logger)
[2021-04-28 16:41:34,009] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:34,009] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,16] (state.change.logger)
[2021-04-28 16:41:34,014] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,16] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:34,014] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,2] (state.change.logger)
[2021-04-28 16:41:34,020] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:51)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:49)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:49)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:681)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:677)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.KafkaController.startup(KafkaController.scala:677)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:224)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition metadata_topic-0 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-49 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition netflow_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-38 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition http_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-16 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-27 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition smtp_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-8 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-19 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition tls_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1001,LeaderEpoch:54,ControllerEpoch:57) to brokers Set(1) for partition topic_test-0 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-2 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-13 (state.change.logger)
[2021-04-28 16:41:34,197] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-35 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-46 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-24 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-5 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-43 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-32 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-21 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set(1) for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-10 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-37 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition http_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-48 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition netflow_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition metadata_topic-2 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition tls_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-18 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-40 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-29 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-7 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition fileinfo_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-45 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-34 (state.change.logger)
[2021-04-28 16:41:34,198] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-23 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition smtp_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition http_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-26 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-4 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-15 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-42 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set(1) for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-9 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-31 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-20 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-1 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-12 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition fileinfo_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition metadata_topic-1 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition smtp_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition tls_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,199] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-28 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-17 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-6 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition netflow_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-39 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-44 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-36 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-47 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-25 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-3 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-14 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-41 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-30 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition meta_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-11 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-22 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-33 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition fileinfo_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1) for partition __consumer_offsets-0 (state.change.logger)
[2021-04-28 16:41:34,200] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set(1) for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,208] TRACE Controller 1 epoch 58 changed state of replica 1 for partition [dns_kafka_topic,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2021-04-28 16:41:34,209] TRACE Controller 1 epoch 58 changed state of replica 1 for partition [dns_kafka_topic,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2021-04-28 16:41:34,209] TRACE Controller 1 epoch 58 changed state of replica 1 for partition [dns_kafka_topic,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2021-04-28 16:41:34,210] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to broker 1 for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,210] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to broker 1 for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,210] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to broker 1 for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,212] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set(1) for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,212] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set(1) for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,212] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56) to brokers Set(1) for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,212] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,19] (state.change.logger)
[2021-04-28 16:41:34,219] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,19] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,219] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,225] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,225] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,30] (state.change.logger)
[2021-04-28 16:41:34,230] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,30] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,230] TRACE Controller 1 epoch 58 started leader election for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,234] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,235] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition meta_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1001,LeaderEpoch:54,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1001) for partition topic_test-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,236] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,237] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,238] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,238] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,238] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,238] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,238] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,239] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,240] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,241] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,241] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:34,242] TRACE Controller 1 epoch 58 elected leader 1 for Offline partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,244] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:34,244] TRACE Controller 1 epoch 58 changed partition [dns_kafka_topic,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2021-04-28 16:41:34,244] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,47] (state.change.logger)
[2021-04-28 16:41:34,249] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,47] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,249] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,255] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,255] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,29] (state.change.logger)
[2021-04-28 16:41:34,261] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,29] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,262] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,41] (state.change.logger)
[2021-04-28 16:41:34,267] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,41] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,267] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,2] (state.change.logger)
[2021-04-28 16:41:34,272] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,273] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,39] (state.change.logger)
[2021-04-28 16:41:34,278] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=56, leader=1010, leaderEpoch=0, isr=[1010], zkVersion=0, replicas=[1, 1010, 2]) correlation id 1 from controller 1 epoch 58 for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,278] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=56, leader=1010, leaderEpoch=0, isr=[1010], zkVersion=0, replicas=[1, 1010, 2]) correlation id 1 from controller 1 epoch 58 for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,278] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=56, leader=1010, leaderEpoch=0, isr=[1010], zkVersion=0, replicas=[1, 2, 1010]) correlation id 1 from controller 1 epoch 58 for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,279] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,39] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,279] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,10] (state.change.logger)
[2021-04-28 16:41:34,284] TRACE Broker 1 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 58 starting the become-follower transition for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,284] TRACE Broker 1 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 58 starting the become-follower transition for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,284] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,10] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,284] TRACE Broker 1 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 58 starting the become-follower transition for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,284] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,17] (state.change.logger)
[2021-04-28 16:41:34,286] ERROR Broker 1 received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 56 for partition dns_kafka_topic-2 but cannot become follower since the new leader 1010 is unavailable. (state.change.logger)
[2021-04-28 16:41:34,289] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,17] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,290] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,14] (state.change.logger)
[2021-04-28 16:41:34,295] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,14] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,295] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,40] (state.change.logger)
[2021-04-28 16:41:34,302] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,40] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,302] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,307] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,308] TRACE Controller 1 epoch 58 started leader election for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,316] ERROR Broker 1 received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 56 for partition dns_kafka_topic-0 but cannot become follower since the new leader 1010 is unavailable. (state.change.logger)
[2021-04-28 16:41:34,317] TRACE Controller 1 epoch 58 elected leader 1 for Offline partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,319] TRACE Controller 1 epoch 58 changed partition [dns_kafka_topic,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2021-04-28 16:41:34,319] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,18] (state.change.logger)
[2021-04-28 16:41:34,326] ERROR Broker 1 received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 56 for partition dns_kafka_topic-1 but cannot become follower since the new leader 1010 is unavailable. (state.change.logger)
[2021-04-28 16:41:34,326] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,18] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,327] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,332] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,332] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,0] (state.change.logger)
[2021-04-28 16:41:34,338] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,338] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,26] (state.change.logger)
[2021-04-28 16:41:34,343] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,26] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,344] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,24] (state.change.logger)
[2021-04-28 16:41:34,350] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,24] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,350] TRACE Controller 1 epoch 58 started leader election for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,351] TRACE Broker 1 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 58 for the become-follower transition for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,351] TRACE Broker 1 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 58 for the become-follower transition for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,351] TRACE Broker 1 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 58 for the become-follower transition for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,355] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=dns_kafka_topic,partition=1,error_code=0},{topic=dns_kafka_topic,partition=0,error_code=0},{topic=dns_kafka_topic,partition=2,error_code=0}]} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:34,357] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2021-04-28 16:41:34,357] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2021-04-28 16:41:34,357] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1010,ISR:1010,LeaderEpoch:0,ControllerEpoch:56),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2021-04-28 16:41:34,358] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:34,361] TRACE Controller 1 epoch 58 elected leader 1 for Offline partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,362] TRACE Controller 1 epoch 58 changed partition [dns_kafka_topic,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2021-04-28 16:41:34,362] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,367] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,367] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,33] (state.change.logger)
[2021-04-28 16:41:34,372] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,33] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,373] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,376] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,376] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,20] (state.change.logger)
[2021-04-28 16:41:34,380] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,20] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,380] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,3] (state.change.logger)
[2021-04-28 16:41:34,387] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,3] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,388] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,21] (state.change.logger)
[2021-04-28 16:41:34,393] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,21] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,393] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,22] (state.change.logger)
[2021-04-28 16:41:34,397] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,22] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,398] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,5] (state.change.logger)
[2021-04-28 16:41:34,402] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,5] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,402] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,12] (state.change.logger)
[2021-04-28 16:41:34,408] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,12] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,408] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,413] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,414] TRACE Controller 1 epoch 58 started leader election for partition [topic_test,0] (state.change.logger)
[2021-04-28 16:41:34,418] ERROR Controller 1 epoch 58 initiated state change for partition [topic_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [topic_test,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1001)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,419] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,8] (state.change.logger)
[2021-04-28 16:41:34,423] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,8] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,424] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,23] (state.change.logger)
[2021-04-28 16:41:34,429] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,23] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,429] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,15] (state.change.logger)
[2021-04-28 16:41:34,435] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,15] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,435] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,11] (state.change.logger)
[2021-04-28 16:41:34,441] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,11] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,442] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,48] (state.change.logger)
[2021-04-28 16:41:34,448] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,48] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,449] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,453] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,453] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,459] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,459] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,13] (state.change.logger)
[2021-04-28 16:41:34,463] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,13] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,464] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,49] (state.change.logger)
[2021-04-28 16:41:34,468] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,49] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,468] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,6] (state.change.logger)
[2021-04-28 16:41:34,472] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,6] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,472] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,28] (state.change.logger)
[2021-04-28 16:41:34,476] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,28] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,476] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,4] (state.change.logger)
[2021-04-28 16:41:34,479] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,4] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,479] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,483] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,483] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,37] (state.change.logger)
[2021-04-28 16:41:34,488] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,37] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,488] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,492] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,492] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,31] (state.change.logger)
[2021-04-28 16:41:34,496] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,31] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,496] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,44] (state.change.logger)
[2021-04-28 16:41:34,499] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,44] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,500] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,1] (state.change.logger)
[2021-04-28 16:41:34,503] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,504] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,42] (state.change.logger)
[2021-04-28 16:41:34,507] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,42] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,508] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,34] (state.change.logger)
[2021-04-28 16:41:34,511] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,34] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,512] TRACE Controller 1 epoch 58 started leader election for partition [meta_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,516] ERROR Controller 1 epoch 58 initiated state change for partition [meta_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [meta_kafka_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,516] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,46] (state.change.logger)
[2021-04-28 16:41:34,520] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,46] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,521] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,0] (state.change.logger)
[2021-04-28 16:41:34,524] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,524] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,527] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,527] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,25] (state.change.logger)
[2021-04-28 16:41:34,532] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,25] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,532] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,536] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,536] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,45] (state.change.logger)
[2021-04-28 16:41:34,541] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,45] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,541] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,27] (state.change.logger)
[2021-04-28 16:41:34,545] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,27] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,545] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,32] (state.change.logger)
[2021-04-28 16:41:34,551] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,32] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,551] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,43] (state.change.logger)
[2021-04-28 16:41:34,557] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,43] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,557] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,564] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,564] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,36] (state.change.logger)
[2021-04-28 16:41:34,571] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,36] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,572] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,578] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,578] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,35] (state.change.logger)
[2021-04-28 16:41:34,586] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,35] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,586] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,7] (state.change.logger)
[2021-04-28 16:41:34,592] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,7] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,592] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,9] (state.change.logger)
[2021-04-28 16:41:34,597] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,9] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,597] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,38] (state.change.logger)
[2021-04-28 16:41:34,602] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,38] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,602] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,1] (state.change.logger)
[2021-04-28 16:41:34,607] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,1] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,607] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,16] (state.change.logger)
[2021-04-28 16:41:34,611] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,16] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,611] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,2] (state.change.logger)
[2021-04-28 16:41:34,615] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,2] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:34,616] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to broker 1 for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,616] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to broker 1 for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,616] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to broker 1 for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,616] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1) for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,616] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1) for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,616] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1) for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,617] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=58, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 1010, 2]) correlation id 3 from controller 1 epoch 58 for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:34,617] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=58, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 1010, 2]) correlation id 3 from controller 1 epoch 58 for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:34,617] TRACE Broker 1 received LeaderAndIsr request PartitionState(controllerEpoch=58, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2, 1010]) correlation id 3 from controller 1 epoch 58 for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:34,617] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 58 starting the become-leader transition for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,617] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 58 starting the become-leader transition for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,617] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 58 starting the become-leader transition for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,624] TRACE Broker 1 stopped fetchers as part of become-leader request from controller 1 epoch 58 with correlation id 3 for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,624] TRACE Broker 1 stopped fetchers as part of become-leader request from controller 1 epoch 58 with correlation id 3 for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,624] TRACE Broker 1 stopped fetchers as part of become-leader request from controller 1 epoch 58 with correlation id 3 for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 58 for the become-leader transition for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 58 for the become-leader transition for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 58 for the become-leader transition for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=dns_kafka_topic,partition=1,error_code=0},{topic=dns_kafka_topic,partition=0,error_code=0},{topic=dns_kafka_topic,partition=2,error_code=0}]} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 4 (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 4 (state.change.logger)
[2021-04-28 16:41:34,625] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 4 (state.change.logger)
[2021-04-28 16:41:34,626] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition metadata_topic-0 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition netflow_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition http_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition smtp_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition tls_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1001,LeaderEpoch:54,ControllerEpoch:57) to brokers Set(1, 2) for partition topic_test-0 (state.change.logger)
[2021-04-28 16:41:50,832] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition http_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition netflow_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition metadata_topic-2 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition tls_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition fileinfo_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition smtp_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition http_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,833] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition fileinfo_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition metadata_topic-1 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition smtp_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition tls_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition netflow_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2021-04-28 16:41:50,834] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition meta_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition fileinfo_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2021-04-28 16:41:50,835] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 changed state of replica 2 for partition [dns_kafka_topic,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 changed state of replica 2 for partition [dns_kafka_topic,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 changed state of replica 2 for partition [dns_kafka_topic,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to broker 2 for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to broker 2 for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to broker 2 for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,836] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,837] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,837] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,19] (state.change.logger)
[2021-04-28 16:41:50,839] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,839] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,839] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,839] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,840] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,841] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,841] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,841] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition meta_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,841] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1001,LeaderEpoch:54,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1001) for partition topic_test-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,841] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,842] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,842] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,842] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,842] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,843] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,844] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,845] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,846] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,19] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,846] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:50,846] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,846] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,846] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,847] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,848] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,848] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2021-04-28 16:41:50,850] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:50,852] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 6 (state.change.logger)
[2021-04-28 16:41:50,852] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 6 (state.change.logger)
[2021-04-28 16:41:50,852] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 6 (state.change.logger)
[2021-04-28 16:41:50,853] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:50,855] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,856] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,30] (state.change.logger)
[2021-04-28 16:41:50,862] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,30] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,862] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,47] (state.change.logger)
[2021-04-28 16:41:50,867] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,47] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,867] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:50,872] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,873] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,29] (state.change.logger)
[2021-04-28 16:41:50,877] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,29] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,878] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,41] (state.change.logger)
[2021-04-28 16:41:50,883] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,41] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,883] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,2] (state.change.logger)
[2021-04-28 16:41:50,888] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,888] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,39] (state.change.logger)
[2021-04-28 16:41:50,889] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,890] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,890] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,891] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,891] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,891] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,891] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,891] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,891] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,892] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,892] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,892] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,892] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,893] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,893] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,893] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,893] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,894] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,894] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,39] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,894] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,10] (state.change.logger)
[2021-04-28 16:41:50,894] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,894] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,894] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,895] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition meta_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,895] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1001,LeaderEpoch:54,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1001) for partition topic_test-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,895] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,895] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,895] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,896] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,897] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition metadata_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition smtp_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,898] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition http_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,10] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,899] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,17] (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,899] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition netflow_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition tls_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,900] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,901] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,901] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition fileinfo_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,901] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:1002,LeaderEpoch:7,ControllerEpoch:57),ReplicationFactor:1),AllReplicas:1002) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2021-04-28 16:41:50,904] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,17] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,904] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,14] (state.change.logger)
[2021-04-28 16:41:50,904] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9095 (id: 2 rack: null) (state.change.logger)
[2021-04-28 16:41:50,908] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,14] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,908] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,40] (state.change.logger)
[2021-04-28 16:41:50,914] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,40] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,914] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:50,919] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,920] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,18] (state.change.logger)
[2021-04-28 16:41:50,925] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,18] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,925] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:50,930] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,930] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,0] (state.change.logger)
[2021-04-28 16:41:50,935] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,935] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,26] (state.change.logger)
[2021-04-28 16:41:50,941] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,26] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,941] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,24] (state.change.logger)
[2021-04-28 16:41:50,947] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,24] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,947] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:50,950] TRACE Broker 2 received LeaderAndIsr request PartitionState(controllerEpoch=58, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 1010, 2]) correlation id 1 from controller 1 epoch 58 for partition [dns_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:50,951] TRACE Broker 2 received LeaderAndIsr request PartitionState(controllerEpoch=58, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 1010, 2]) correlation id 1 from controller 1 epoch 58 for partition [dns_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:50,951] TRACE Broker 2 received LeaderAndIsr request PartitionState(controllerEpoch=58, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2, 1010]) correlation id 1 from controller 1 epoch 58 for partition [dns_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:50,952] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,952] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,33] (state.change.logger)
[2021-04-28 16:41:50,957] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,33] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,957] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:50,958] TRACE Broker 2 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 58 starting the become-follower transition for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:50,959] TRACE Broker 2 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 58 starting the become-follower transition for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:50,959] TRACE Broker 2 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 58 starting the become-follower transition for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:50,962] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,962] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,20] (state.change.logger)
[2021-04-28 16:41:50,967] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,20] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,967] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,3] (state.change.logger)
[2021-04-28 16:41:50,972] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,3] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,972] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,21] (state.change.logger)
[2021-04-28 16:41:50,977] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,21] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,977] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,22] (state.change.logger)
[2021-04-28 16:41:50,982] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,22] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,983] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,5] (state.change.logger)
[2021-04-28 16:41:50,989] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,5] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,989] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,12] (state.change.logger)
[2021-04-28 16:41:50,994] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,12] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:50,994] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:50,999] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,000] TRACE Controller 1 epoch 58 started leader election for partition [topic_test,0] (state.change.logger)
[2021-04-28 16:41:51,008] ERROR Controller 1 epoch 58 initiated state change for partition [topic_test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [topic_test,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1001)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,008] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,8] (state.change.logger)
[2021-04-28 16:41:51,013] TRACE Broker 2 stopped fetchers as part of become-follower request from controller 1 epoch 58 with correlation id 1 for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:51,013] TRACE Broker 2 stopped fetchers as part of become-follower request from controller 1 epoch 58 with correlation id 1 for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:51,013] TRACE Broker 2 stopped fetchers as part of become-follower request from controller 1 epoch 58 with correlation id 1 for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:51,013] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,8] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,014] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,23] (state.change.logger)
[2021-04-28 16:41:51,019] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,23] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,019] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,15] (state.change.logger)
[2021-04-28 16:41:51,024] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,15] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,024] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,11] (state.change.logger)
[2021-04-28 16:41:51,029] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,11] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,030] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,48] (state.change.logger)
[2021-04-28 16:41:51,031] TRACE Broker 2 truncated logs and checkpointed recovery boundaries for partition dns_kafka_topic-0 as part of become-follower request with correlation id 1 from controller 1 epoch 58 (state.change.logger)
[2021-04-28 16:41:51,032] TRACE Broker 2 truncated logs and checkpointed recovery boundaries for partition dns_kafka_topic-2 as part of become-follower request with correlation id 1 from controller 1 epoch 58 (state.change.logger)
[2021-04-28 16:41:51,032] TRACE Broker 2 truncated logs and checkpointed recovery boundaries for partition dns_kafka_topic-1 as part of become-follower request with correlation id 1 from controller 1 epoch 58 (state.change.logger)
[2021-04-28 16:41:51,035] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,48] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,035] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:51,040] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,040] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:51,045] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,045] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,13] (state.change.logger)
[2021-04-28 16:41:51,049] TRACE Broker 2 started fetcher to new leader as part of become-follower request from controller 1 epoch 58 with correlation id 1 for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:51,049] TRACE Broker 2 started fetcher to new leader as part of become-follower request from controller 1 epoch 58 with correlation id 1 for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:51,050] TRACE Broker 2 started fetcher to new leader as part of become-follower request from controller 1 epoch 58 with correlation id 1 for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:51,051] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,13] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,052] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,49] (state.change.logger)
[2021-04-28 16:41:51,052] TRACE Broker 2 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 58 for the become-follower transition for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:51,052] TRACE Broker 2 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 58 for the become-follower transition for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:51,053] TRACE Broker 2 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 58 for the become-follower transition for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:51,058] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=dns_kafka_topic,partition=1,error_code=0},{topic=dns_kafka_topic,partition=0,error_code=0},{topic=dns_kafka_topic,partition=2,error_code=0}]} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9095 (id: 2 rack: null) (state.change.logger)
[2021-04-28 16:41:51,059] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,49] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,059] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,6] (state.change.logger)
[2021-04-28 16:41:51,060] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2021-04-28 16:41:51,060] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2021-04-28 16:41:51,061] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2021-04-28 16:41:51,061] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9095 (id: 2 rack: null) (state.change.logger)
[2021-04-28 16:41:51,066] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,6] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,066] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,28] (state.change.logger)
[2021-04-28 16:41:51,071] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,28] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,072] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,4] (state.change.logger)
[2021-04-28 16:41:51,076] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,4] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,076] TRACE Controller 1 epoch 58 started leader election for partition [netflow_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:51,081] ERROR Controller 1 epoch 58 initiated state change for partition [netflow_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [netflow_kafka_topic,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,081] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,37] (state.change.logger)
[2021-04-28 16:41:51,087] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,37] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,087] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:51,090] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,090] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,31] (state.change.logger)
[2021-04-28 16:41:51,094] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,31] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,095] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,44] (state.change.logger)
[2021-04-28 16:41:51,099] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,44] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,099] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,1] (state.change.logger)
[2021-04-28 16:41:51,102] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,103] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,42] (state.change.logger)
[2021-04-28 16:41:51,107] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,42] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,107] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,34] (state.change.logger)
[2021-04-28 16:41:51,111] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,34] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,111] TRACE Controller 1 epoch 58 started leader election for partition [meta_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:51,114] ERROR Controller 1 epoch 58 initiated state change for partition [meta_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [meta_kafka_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,115] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,46] (state.change.logger)
[2021-04-28 16:41:51,118] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,46] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,118] TRACE Controller 1 epoch 58 started leader election for partition [metadata_topic,0] (state.change.logger)
[2021-04-28 16:41:51,122] ERROR Controller 1 epoch 58 initiated state change for partition [metadata_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [metadata_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,122] TRACE Controller 1 epoch 58 started leader election for partition [fileinfo_kafka_topic,0] (state.change.logger)
[2021-04-28 16:41:51,126] ERROR Controller 1 epoch 58 initiated state change for partition [fileinfo_kafka_topic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [fileinfo_kafka_topic,0] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,126] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,25] (state.change.logger)
[2021-04-28 16:41:51,131] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,25] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,131] TRACE Controller 1 epoch 58 started leader election for partition [tls_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:51,134] ERROR Controller 1 epoch 58 initiated state change for partition [tls_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [tls_kafka_topic,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,134] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,45] (state.change.logger)
[2021-04-28 16:41:51,138] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,45] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,139] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,27] (state.change.logger)
[2021-04-28 16:41:51,142] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,27] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,143] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,32] (state.change.logger)
[2021-04-28 16:41:51,147] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,32] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,147] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,43] (state.change.logger)
[2021-04-28 16:41:51,151] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,43] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,151] TRACE Controller 1 epoch 58 started leader election for partition [smtp_kafka_topic,2] (state.change.logger)
[2021-04-28 16:41:51,155] ERROR Controller 1 epoch 58 initiated state change for partition [smtp_kafka_topic,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [smtp_kafka_topic,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,156] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,36] (state.change.logger)
[2021-04-28 16:41:51,160] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,36] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,160] TRACE Controller 1 epoch 58 started leader election for partition [http_kafka_topic,1] (state.change.logger)
[2021-04-28 16:41:51,163] ERROR Controller 1 epoch 58 initiated state change for partition [http_kafka_topic,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [http_kafka_topic,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,163] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,35] (state.change.logger)
[2021-04-28 16:41:51,167] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,35] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,167] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,7] (state.change.logger)
[2021-04-28 16:41:51,172] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,7] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,172] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,9] (state.change.logger)
[2021-04-28 16:41:51,176] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,9] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,176] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,38] (state.change.logger)
[2021-04-28 16:41:51,180] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,38] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,181] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,1] (state.change.logger)
[2021-04-28 16:41:51,184] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,1] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,184] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,16] (state.change.logger)
[2021-04-28 16:41:51,189] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,16] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:51,189] TRACE Controller 1 epoch 58 started leader election for partition [__consumer_offsets,2] (state.change.logger)
[2021-04-28 16:41:51,193] ERROR Controller 1 epoch 58 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,2] is alive. Live brokers are: [Set(2, 1)], Assigned replicas are: [List(1002)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:439)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$doHandleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.doHandleChildChange(ReplicaStateMachine.scala:355)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:349)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2021-04-28 16:41:58,287] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-1 (state.change.logger)
[2021-04-28 16:41:58,287] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-0 (state.change.logger)
[2021-04-28 16:41:58,287] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58) to brokers Set(1, 2) for partition dns_kafka_topic-2 (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 7 (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 7 (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 7 (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-1 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 3 (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-0 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 3 (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9094 (id: 1 rack: null) (state.change.logger)
[2021-04-28 16:41:58,288] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:58),ReplicationFactor:3),AllReplicas:1,2,1010) for partition dns_kafka_topic-2 in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 3 (state.change.logger)
[2021-04-28 16:41:58,289] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker DESKTOP-V6KRCRU.mshome.net:9095 (id: 2 rack: null) (state.change.logger)
[2021-04-28 16:44:28,333] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@305fd85d, name=log4j:logger=state.change.logger (state.change.logger)
